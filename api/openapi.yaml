openapi: 3.0.3
info:
  title: Weight & Exercise Tracker API
  version: 0.1.0
servers:
  - url: http://localhost:8000/api
paths:
  /weights:
    get:
      summary: List weights
      parameters:
        - in: query
          name: range
          schema: { type: string, enum: [7d,30d,90d,180d,365d,all] }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Weight'
    post:
      summary: Upsert weight by date
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Weight'
      responses:
        '204': { description: No Content }
  /weights/{date}:
    delete:
      summary: Delete weight by date
      parameters:
        - in: path
          name: date
          required: true
          schema: { type: string, format: date }
      responses:
        '204': { description: No Content }
  /weights/stats:
    get:
      summary: Stats for recent window
      parameters:
        - in: query
          name: window
          schema: { type: integer, enum: [7,30] }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '#/components/schemas/WeightStats' }
  /exercises:
    get:
      summary: List exercises
      parameters:
        - in: query
          name: range
          schema: { type: string, enum: [7d,30d,90d,180d,365d,all] }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Exercise' }
    post:
      summary: Upsert exercise by (date,activity)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exercise'
      responses:
        '204': { description: No Content }
  /exercises/daily:
    get:
      summary: Daily total minutes
      parameters:
        - in: query
          name: range
          schema: { type: string, enum: [7d,30d,90d,180d,365d,all] }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    date: { type: string, format: date }
                    total_min: { type: integer }
  /exercises/by-key:
    delete:
      summary: Delete exercise by (date,activity)
      parameters:
        - in: query
          name: date
          required: true
          schema: { type: string, format: date }
        - in: query
          name: activity
          required: true
          schema: { type: string }
      responses:
        '204': { description: No Content }
  /settings/goal-weight:
    get:
      summary: Get goal weight
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  goal_weight: { type: number, nullable: true }
    post:
      summary: Set goal weight
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                goal_weight: { type: number }
      responses:
        '204': { description: No Content }
components:
  schemas:
    Weight:
      type: object
      required: [date, weight]
      properties:
        date: { type: string, format: date }
        weight: { type: number, minimum: 20, maximum: 300 }
    WeightStats:
      type: object
      properties:
        avg: { type: number, nullable: true }
        delta: { type: number, nullable: true }
        min: { type: number, nullable: true }
        max: { type: number, nullable: true }
    Exercise:
      type: object
      required: [date, activity, duration_min]
      properties:
        id: { type: integer, nullable: true }
        date: { type: string, format: date }
        activity: { type: string }
        duration_min: { type: integer, minimum: 0, maximum: 1440 }

